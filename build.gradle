import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.14.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.6.4"
    }

}

apply plugin: 'base'
apply plugin: 'java'
apply from: "$rootDir/ext.gradle".toString()
print(rootDir)

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

}

configure(allprojects.findAll { it.subprojects.empty }) {

    group 'org.star'
    version '1.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    dependencyManagement {
        imports {
            mavenBom(SpringBootPlugin.BOM_COORDINATES)
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    javadoc {
        options.charSet = 'utf8'
        options.encoding = 'utf8'
        options.docEncoding = 'utf8'
        options.memberLevel = JavadocMemberLevel.PRIVATE
    }

    // 生成source包的task
    task noVersionSourceJar(type: Jar, dependsOn: classes) {
        manifest.attributes provider: 'gradle'
        manifest.attributes groupName: 'org.star'
        manifest.attributes projectName: project.name
        manifest.attributes version: '1.0-SNAPSHOT'
        group = 'build'
        classifier = 'sources'
        archiveName = 'stariboss-' + project.name + '-source.jar'
        from sourceSets.main.allSource
    }

}

def all_only_jar_subject = []
def all_ext_subject = []
def all_ui_subject = []
def all_service_subject = []
def all_api_subject = []

subprojects.each {
    if (it.subprojects.empty && (it.name.endsWith('-api') || it.name.startsWith('platform-'))) {
        all_only_jar_subject << it
    }
    if (it.subprojects.empty && (!it.name.endsWith('-api') && !it.name.startsWith('platform-'))) {
        all_ext_subject << it
    }
    if (it.name.endsWith('-ui')) {
        all_ui_subject << it
    }
    if (it.subprojects.empty && (it.name.endsWith('-service') && !it.name.startsWith('api-')) || it.name.startsWith("open-ai")) {
        all_service_subject << it
    }
    if (it.name.endsWith('-api')) {
        all_api_subject << it
    }
}
configure(all_only_jar_subject) {
    //自动分层打包docker插件,作用是在打包时，自动打包层分好层的jar包
    jar {
        enabled = true
    }
    bootJar { enabled = false }
}

configure(all_service_subject){
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter"
        implementation "org.springframework.boot:spring-boot-starter-tomcat"
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation 'org.springframework.cloud:spring-cloud-context'
        implementation 'org.springframework.boot:spring-boot-starter-jersey'
        runtimeOnly group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.6'
        // https://mvnrepository.com/artifact/cglib/cglib
        implementation group: 'cglib', name: 'cglib', version: '2.2.2'
        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

        // https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter
        implementation 'com.alibaba:druid-spring-boot-starter:1.2.18'

        // 引入 openfeign
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "mysql:mysql-connector-java:${mysqlConnectorVersion}"
        // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc10
        implementation "com.oracle.database.jdbc:ojdbc10:${oracleConnectorVersion}"
        implementation group: 'com.github.plexpt', name: 'chatgpt', version: '4.0.5'

        // https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
        implementation 'org.springframework.kafka:spring-kafka:2.8.1'


        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"

        //lombok
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        // 引入测试模块
        testCompile unitTest
        testCompile 'org.springframework.boot:spring-boot-starter-test'

    }
}